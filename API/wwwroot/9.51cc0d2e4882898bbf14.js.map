{"version":3,"sources":["./src/app/orders/orders.service.ts","./src/app/orders/orders.component.html","./src/app/orders/orders.component.ts","./src/app/orders/order-detailed/order-detailed.component.html","./src/app/orders/orders-routing.module.ts","./src/app/orders/order-detailed/order-detailed.component.ts","./src/app/orders/orders.module.ts"],"names":["OrdersService","http","baseUrl","environment","apiUrl","this","get","id","OrdersComponent","ordersService","accountService","getOrders","getOrdersForUser","subscribe","orders","error","console","log","logout","routes","path","component","OrderDetailedComponent","route","getOrderDetailed","snapshot","paramMap","order","data","breadcrumb","alias","OrdersRoutingModule","forChild","OrdersModule"],"mappings":"6MASO,IAAD,Q,MAAOA,EAGX,YAAoBC,GAAA,KAAAA,OAFpB,KAAAC,QAAUC,EAAA,EAAYC,OAItB,mBACE,OAAOC,KAAKJ,KAAKK,IAAc,GAAGD,KAAKH,kBAGzC,iBAAiBK,GACf,OAAOF,KAAKJ,KAAKK,IAAY,GAAGD,KAAKH,kBAAkBK,M,6CAV9CP,GAAa,Y,yBAAbA,EAAa,QAAbA,EAAa,qBAFZ,S,GAER,G,yCCSE,eACE,aAAI,QAAgB,OACpB,aAAI,Q,eAAsC,OAC1C,aAAI,Q,mBAA4B,OAChC,aAAI,SAAkB,OACxB,Q,yBALiC,mCAC3B,2BACA,6CACA,gCACA,wBCZP,IAAD,Q,MAAOQ,EAGX,YACUC,EACAC,GADA,KAAAD,gBACA,KAAAC,iBAGV,WACEL,KAAKM,YAGP,YACEN,KAAKI,cAAcG,mBAAmBC,UACnCC,IACCT,KAAKS,OAASA,GAEfC,IACCC,QAAQC,IAAIF,KAKlB,SACEV,KAAKK,eAAeQ,U,6CAxBXV,GAAe,oB,uBAAfA,EAAe,+QDV5B,gBACE,cACE,mBAAQ,+BAAS,EAAAU,WACf,mBACF,OACF,OAEA,gBACE,kBACE,gBACE,aACE,aAAI,gBAAK,OACT,cAAI,gBAAI,OACR,cAAI,iBAAK,OACT,cAAI,kBAAM,OACZ,OACF,OACA,iBACE,wBAMF,OACF,OACF,OACF,Q,MAT8B,oC,sDCRxB,G,qDCVN,QACE,gBACE,gBACE,gBACE,+BAMF,OAEA,6BAKF,OACF,OACF,Q,oBAdU,yCAA0B,cAA1B,CAA0B,cAQ5B,oDAAqC,4BAArC,CAAqC,wBCP7C,MAAMC,EAAiB,CACrB,CAAEC,KAAM,GAAIC,UAAW,GACvB,CACED,KAAM,MACNC,UCAE,M,MAAOC,EAGX,YACUC,EACAd,GADA,KAAAc,QACA,KAAAd,gBAGV,WACEJ,KAAKI,cACFe,kBAAkBnB,KAAKkB,MAAME,SAASC,SAASpB,IAAI,OACnDO,UACEc,IACCtB,KAAKsB,MAAQA,GAEdZ,IACCC,QAAQC,IAAIF,M,6CAhBTO,GAAsB,oB,uBAAtBA,EAAsB,wPFVnC,+B,KAAe,iE,0CEUT,GDCFM,KAAM,CAAEC,WAAY,CAAEC,MAAO,oBAS1B,IAAD,Q,MAAOC,G,8BAAAA,I,oDAAAA,IAAmB,SAHrB,CAAC,IAAaC,SAASb,IACtB,O,GAEN,G,gBETC,IAAD,Q,MAAOc,G,8BAAAA,I,oDAAAA,IAAY,SAFd,CAAC,IAAc,EAAqB,Q,GAEzC","file":"9.51cc0d2e4882898bbf14.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { IOrder } from '../shared/models/order';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrdersService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getOrdersForUser(): Observable<IOrder[]> {\n    return this.http.get<IOrder[]>(`${this.baseUrl}/orders`);\n  }\n\n  getOrderDetailed(id: number): Observable<IOrder> {\n    return this.http.get<IOrder>(`${this.baseUrl}/orders/${id}`);\n  }\n}\n","<div class=\"uk-container uk-margin-top\">\n  <div>\n    <button (click)=\"logout()\" class=\"uk-button uk-button-default\">\n      Logout\n    </button>\n  </div>\n\n  <div class=\"uk-overflow-auto\">\n    <table class=\"uk-table uk-table-hover\">\n      <thead>\n        <tr>\n          <th>Order</th>\n          <th>Date</th>\n          <th>Total</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let order of orders\" [routerLink]=\"'/orders/' + order.id\">\n          <td># {{ order.id }}</td>\n          <td>{{ order.orderDate | date: \"medium\" }}</td>\n          <td>{{ order.total | currency }}</td>\n          <td>{{ order.status }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { IOrder } from '../shared/models/order';\nimport { OrdersService } from './orders.service';\nimport { AccountService } from '../account/account.service';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss'],\n})\nexport class OrdersComponent implements OnInit {\n  orders: IOrder[];\n\n  constructor(\n    private ordersService: OrdersService,\n    private accountService: AccountService\n  ) {}\n\n  ngOnInit(): void {\n    this.getOrders();\n  }\n\n  getOrders(): void {\n    this.ordersService.getOrdersForUser().subscribe(\n      (orders: IOrder[]) => {\n        this.orders = orders;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  logout(): void {\n    this.accountService.logout();\n  }\n}\n","<ng-container *ngIf=\"order && order.orderItems && order.shippingPrice\">\n  <div class=\"uk-container uk-margin-top\">\n    <div class=\"checkout-grid\">\n      <div class=\"uk-overflow-auto\">\n        <app-basket-summary\n          [items]=\"order.orderItems\"\n          [isBasket]=\"false\"\n          [isOrder]=\"true\"\n        >\n        </app-basket-summary>\n      </div>\n\n      <app-order-totals\n        [shippingPrice]=\"order.shippingPrice\"\n        [subtotal]=\"order.subtotal\"\n        [total]=\"order.total\"\n      ></app-order-totals>\n    </div>\n  </div>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OrdersComponent } from './orders.component';\nimport { OrderDetailedComponent } from './order-detailed/order-detailed.component';\n\nconst routes: Routes = [\n  { path: '', component: OrdersComponent },\n  {\n    path: ':id',\n    component: OrderDetailedComponent,\n    data: { breadcrumb: { alias: 'OrderDetailed' } },\n  },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrdersRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { IOrder } from '../../shared/models/order';\nimport { ActivatedRoute } from '@angular/router';\nimport { OrdersService } from '../orders.service';\n\n@Component({\n  selector: 'app-order-detailed',\n  templateUrl: './order-detailed.component.html',\n  styleUrls: ['./order-detailed.component.scss'],\n})\nexport class OrderDetailedComponent implements OnInit {\n  order: IOrder;\n\n  constructor(\n    private route: ActivatedRoute,\n    private ordersService: OrdersService\n  ) {}\n\n  ngOnInit(): void {\n    this.ordersService\n      .getOrderDetailed(+this.route.snapshot.paramMap.get('id'))\n      .subscribe(\n        (order: IOrder) => {\n          this.order = order;\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrdersComponent } from './orders.component';\nimport { OrderDetailedComponent } from './order-detailed/order-detailed.component';\nimport { OrdersRoutingModule } from './orders-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [OrdersComponent, OrderDetailedComponent],\n  imports: [CommonModule, OrdersRoutingModule, SharedModule],\n})\nexport class OrdersModule {}\n"],"sourceRoot":"webpack:///"}