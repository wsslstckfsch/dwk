{"version":3,"sources":["./src/app/shared/models/shopParams.ts","./src/app/shared/models/pagination.ts","./src/app/shop/shop.service.ts","./src/app/shop/shop.component.html","./src/app/shop/shop.component.ts","./src/app/shop/product-details/product-details.component.html","./src/app/shop/shop-routing.module.ts","./src/app/shop/product-details/product-details.component.ts","./src/app/shop/shop.module.ts"],"names":["ShopParams","typeId","sort","pageIndex","pageSize","Pagination","data","ShopService","http","baseUrl","environment","apiUrl","products","productTypes","pagination","shopParams","productCache","Map","useCache","this","size","has","Object","values","join","get","of","params","append","toString","search","observe","pipe","map","response","set","body","id","product","forEach","find","p","length","ShopComponent","shopService","basketService","sortOptions","name","value","getShopParams","getProducts","getProductTypes","addItemToBasket","subscribe","totalCount","count","error","console","log","event","target","setShopParams","searchString","nativeElement","routes","path","component","ProductDetailsComponent","activatedRoute","bcService","router","staticContentUrl","quantity","events","filter","getProduct","snapshot","paramMap","lightbox","show","breadcrumb","alias","ShopRoutingModule","forChild","ShopModule"],"mappings":"sLAAO,MAAMA,EAAb,cACE,KAAAC,OAAS,EACT,KAAAC,KAAO,OACP,KAAAC,UAAY,EACZ,KAAAC,SAAW,I,4BCKN,MAAMC,EAAb,cAIE,KAAAC,KAAmB,I,wCCAd,IAAD,Q,MAAOC,EAQX,YAAoBC,GAAA,KAAAA,OAPpB,KAAAC,QAAUC,EAAA,EAAYC,OACtB,KAAAC,SAAuB,GACvB,KAAAC,aAA+B,GAC/B,KAAAC,WAAa,IAAIT,EACjB,KAAAU,WAAa,IAAIf,EACjB,KAAAgB,aAAe,IAAIC,IAInB,YAAYC,GAKV,IAJiB,IAAbA,IACFC,KAAKH,aAAe,IAAIC,KAGtBE,KAAKH,aAAaI,KAAO,IAAkB,IAAbF,GAC5BC,KAAKH,aAAaK,IAAIC,OAAOC,OAAOJ,KAAKJ,YAAYS,KAAK,MAI5D,OAHAL,KAAKL,WAAWR,KAAOa,KAAKH,aAAaS,IACvCH,OAAOC,OAAOJ,KAAKJ,YAAYS,KAAK,MAE/B,OAAAE,EAAA,GAAGP,KAAKL,YAInB,IAAIa,EAAS,IAAI,IAWjB,OAVIR,KAAKJ,WAAWd,OAAS,IAC3B0B,EAASA,EAAOC,OAAO,SAAUT,KAAKJ,WAAWd,OAAO4B,aAEtDV,KAAKJ,WAAWe,SAClBH,EAASA,EAAOC,OAAO,SAAUT,KAAKJ,WAAWe,SAEnDH,EAASA,EAAOC,OAAO,OAAQT,KAAKJ,WAAWb,MAC/CyB,EAASA,EAAOC,OAAO,YAAaT,KAAKJ,WAAWZ,UAAU0B,YAC9DF,EAASA,EAAOC,OAAO,WAAYT,KAAKJ,WAAWX,SAASyB,YAErDV,KAAKX,KACTiB,IAAiB,GAAGN,KAAKV,mBAAoB,CAC5CsB,QAAS,WACTJ,WAEDK,KACC,OAAAC,EAAA,GAAKC,IACHf,KAAKH,aAAamB,IAChBb,OAAOC,OAAOJ,KAAKJ,YAAYS,KAAK,KACpCU,EAASE,KAAK9B,MAEhBa,KAAKL,WAAaoB,EAASE,KACpBjB,KAAKL,cAKpB,cAAca,GACZR,KAAKJ,WAAaY,EAGpB,gBACE,OAAOR,KAAKJ,WAGd,WAAWsB,GACT,IAAIC,EAKJ,OAJAnB,KAAKH,aAAauB,QAAS3B,IACzB0B,EAAU1B,EAAS4B,KAAMC,GAAMA,EAAEJ,KAAOA,KAGtCC,EACK,OAAAZ,EAAA,GAAGY,GAGLnB,KAAKX,KAAKiB,IAAc,GAAGN,KAAKV,oBAAoB4B,KAG7D,kBACE,OAAIlB,KAAKN,aAAa6B,OAAS,EACtB,OAAAhB,EAAA,GAAGP,KAAKN,cAGVM,KAAKX,KAAKiB,IAAoB,GAAGN,KAAKV,0BAA0BuB,KACrE,OAAAC,EAAA,GAAKC,IACHf,KAAKN,aAAeqB,EACbA,M,6CAjFF3B,GAAW,Y,yBAAXA,EAAW,QAAXA,EAAW,qBAFV,S,GAER,G,wECNI,oBAKE,QACF,Q,mCAJE,sBAAoB,wCAGpB,8B,yBAKF,oBACE,QACF,Q,yBAF0C,mBACxC,8B,uCAyBN,gBACE,iBACE,eAIE,iBACA,iBACE,kBACF,OACF,OACA,iBACE,eACE,gBAA0B,QAAkB,OAC9C,OACA,kBACE,mBAAmC,SAEjC,OACF,mBAAmC,SAAwB,OAC7D,OACA,kBACE,aAAG,S,oBAA8B,OACjC,qBACE,wFAGA,mBACA,mBACF,OACF,OACF,OACF,OACF,O,4BA9BM,4CAGK,oCAMF,4CACyB,qBAGS,4BAGA,2BAGhC,kC,uCAjEjB,QACE,gBACE,eAEA,gBACE,gBACE,mBAAQ,oEACN,yBAOF,OAEA,mBAAQ,oEACN,yBAGF,OACF,OAEA,gBACE,iBACE,gBACA,uBAEE,iEAFF,OAMF,OACA,qBAAQ,2DACN,oBACF,OACA,qBAAQ,0DACN,mBACF,OACF,OACF,OAEA,iBACE,wBAkCF,OACF,OACF,O,uBAvE6B,sCASM,uCA0BL,qCC/BvB,IAAD,Q,MAAOoC,EAYX,YACUC,EACAC,GADA,KAAAD,cACA,KAAAC,gBARV,KAAAC,YAAc,CACZ,CAAEC,KAAM,eAAgBC,MAAO,QAC/B,CAAED,KAAM,YAAaC,MAAO,YAC5B,CAAED,KAAM,aAAcC,MAAO,cAO7B7B,KAAKJ,WAAaI,KAAKyB,YAAYK,gBAGrC,WACE9B,KAAK+B,aAAY,GACjB/B,KAAKgC,kBAGP,gBAAgBb,GACdnB,KAAK0B,cAAcO,gBAAgBd,GAGrC,YAAYpB,GAAW,GACrBC,KAAKyB,YAAYM,YAAYhC,GAAUmC,UACpCnB,IACCf,KAAKP,SAAWsB,EAAS5B,KACzBa,KAAKmC,WAAapB,EAASqB,OAE5BC,IACCC,QAAQC,IAAIF,KAKlB,kBACErC,KAAKyB,YAAYO,kBAAkBE,UAChCnB,IACCf,KAAKN,aAAe,CAAC,CAAEwB,GAAI,EAAGU,KAAM,gBAAkBb,IAEvDsB,IACCC,QAAQC,IAAIF,KAKlB,eAAeG,GACb,MAAMhC,EAASR,KAAKyB,YAAYK,gBAChCtB,EAAO1B,OAAS0D,EAAMC,OAAOZ,MAC7BrB,EAAOxB,UAAY,EACnBgB,KAAKyB,YAAYiB,cAAclC,GAC/BR,KAAK+B,cAGP,eAAeS,GACb,MAAMhC,EAASR,KAAKyB,YAAYK,gBAChCtB,EAAOzB,KAAOyD,EAAMC,OAAOZ,MAC3B7B,KAAKyB,YAAYiB,cAAclC,GAC/BR,KAAK+B,cAGP,cAAcS,GACZ,MAAMhC,EAASR,KAAKyB,YAAYK,gBAC5BtB,EAAOxB,YAAcwD,IACvBhC,EAAOxB,UAAYwD,EACnBxC,KAAKyB,YAAYiB,cAAclC,GAC/BR,KAAK+B,aAAY,IAIrB,WACE,MAAMvB,EAASR,KAAKyB,YAAYK,gBAChCtB,EAAOG,OAASX,KAAK2C,aAAaC,cAAcf,MAChDrB,EAAOxB,UAAY,EACnBgB,KAAKyB,YAAYiB,cAAclC,GAC/BR,KAAK+B,cAGP,UACE/B,KAAK2C,aAAaC,cAAcf,MAAQ,GACxC7B,KAAKJ,WAAa,IAAIf,EACtBmB,KAAKyB,YAAYiB,cAAc1C,KAAKJ,YACpCI,KAAK+B,e,6CAvFIP,GAAa,oB,uBAAbA,EAAa,iD,GAAA,K,49BDZ1B,gC,KAAe,yC,s1CCYT,G,wFCZN,QACE,gBACE,cAAG,+DACD,gBACA,gBACE,iBACF,OACF,OAEA,gBACE,aAAI,QAAkB,OACtB,gBACE,kBAAmC,SAAyB,OAC5D,kBAAmC,SAAwB,OAC7D,OACA,cAAI,S,oBAA8B,OAClC,iBACE,kBACE,qBACE,oEAGA,mBACF,OACA,mBAAqB,SAAc,OACnC,qBACE,oEAGA,mBACF,OACF,OACA,qBACE,kEAGA,mBACA,mBACF,OACF,OACA,kBAEA,iBAAO,SAAmD,OAE1D,kBACE,gBAGG,oBAAQ,OAEX,gBAIA,gBACF,OACF,OACF,OACF,O,uBAvDW,4CAOD,6BAEiC,oCACA,mCAEjC,0CASqB,yBAgBpB,qDAEE,oEAKH,gFAKA,iFC/CV,MAAMqB,EAAiB,CACrB,CAAEC,KAAM,GAAIC,UAAW,GACvB,CACED,KAAM,MACNC,UCOE,M,MAAOC,EAKX,YACUvB,EACAwB,EACAC,EACAxB,EACAyB,GAJA,KAAA1B,cACA,KAAAwB,iBACA,KAAAC,YACA,KAAAxB,gBACA,KAAAyB,SATV,KAAAC,iBAAmB7D,EAAA,EAAY6D,iBAE/B,KAAAC,SAAW,EASTrD,KAAKkD,UAAUlC,IAAI,kBAAmB,IAEtCmC,EAAOG,OACJzC,KAAK,OAAA0C,EAAA,GAAQf,GAAUA,aAAiB,MACxCN,UAAWM,IACVxC,KAAKwD,eAIX,YAEA,kBACExD,KAAK0B,cAAcO,gBAAgBjC,KAAKmB,QAASnB,KAAKqD,UAGxD,oBACErD,KAAKqD,WAGP,oBACMrD,KAAKqD,SAAW,GAClBrD,KAAKqD,WAIT,aACErD,KAAKyB,YACF+B,YAAYxD,KAAKiD,eAAeQ,SAASC,SAASpD,IAAI,OACtD4B,UACEf,IACCnB,KAAKmB,QAAUA,EACfmB,QAAQC,IAAIvC,KAAKmB,QAAQS,MACzB5B,KAAKkD,UAAUlC,IAAI,kBAAmBG,EAAQS,OAE/CS,IACCC,QAAQC,IAAIF,KAKpB,eACE,IAAMsB,SAAS,aAAaC,KAAK,I,6CArDxBZ,GAAuB,kD,uBAAvBA,EAAuB,62BFhBpC,iCA4DA,oB,KA5De,wB,2rBEgBT,GDNF7D,KAAM,CAAE0E,WAAY,CAAEC,MAAO,qBAS1B,IAAD,Q,MAAOC,G,8BAAAA,I,oDAAAA,IAAiB,SAHnB,CAAC,IAAaC,SAASnB,IACtB,O,GAEN,GERA,Q,MAAOoB,G,8BAAAA,I,oDAAAA,IAAU,SAFZ,CAAC,IAAc,IAAc,M,GAElC","file":"10.63072dce7341d5a4ca2a.js","sourcesContent":["export class ShopParams {\n  typeId = 0;\n  sort = 'name';\n  pageIndex = 1;\n  pageSize = 50;\n  search: string;\n}\n","import { IProduct } from './product';\n\nexport interface IPagination {\n  pageIndex: number;\n  pageSize: number;\n  count: number;\n  data: IProduct[];\n}\n\nexport class Pagination implements IPagination {\n  pageIndex: number;\n  pageSize: number;\n  count: number;\n  data: IProduct[] = [];\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { IPagination, Pagination } from '../shared/models/pagination';\nimport { Observable, of } from 'rxjs';\nimport { IProductType } from '../shared/models/productType';\nimport { map } from 'rxjs/operators';\nimport { ShopParams } from '../shared/models/shopParams';\nimport { IProduct } from '../shared/models/product';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShopService {\n  baseUrl = environment.apiUrl;\n  products: IProduct[] = [];\n  productTypes: IProductType[] = [];\n  pagination = new Pagination();\n  shopParams = new ShopParams();\n  productCache = new Map();\n\n  constructor(private http: HttpClient) {}\n\n  getProducts(useCache: boolean): Observable<IPagination> {\n    if (useCache === false) {\n      this.productCache = new Map();\n    }\n\n    if (this.productCache.size > 0 && useCache === true) {\n      if (this.productCache.has(Object.values(this.shopParams).join('-'))) {\n        this.pagination.data = this.productCache.get(\n          Object.values(this.shopParams).join('-')\n        );\n        return of(this.pagination);\n      }\n    }\n\n    let params = new HttpParams();\n    if (this.shopParams.typeId > 0) {\n      params = params.append('typeId', this.shopParams.typeId.toString());\n    }\n    if (this.shopParams.search) {\n      params = params.append('search', this.shopParams.search);\n    }\n    params = params.append('sort', this.shopParams.sort);\n    params = params.append('pageIndex', this.shopParams.pageIndex.toString());\n    params = params.append('pageSize', this.shopParams.pageSize.toString());\n\n    return this.http\n      .get<IPagination>(`${this.baseUrl}/products`, {\n        observe: 'response',\n        params,\n      })\n      .pipe(\n        map((response) => {\n          this.productCache.set(\n            Object.values(this.shopParams).join('-'),\n            response.body.data\n          );\n          this.pagination = response.body;\n          return this.pagination;\n        })\n      );\n  }\n\n  setShopParams(params: ShopParams): void {\n    this.shopParams = params;\n  }\n\n  getShopParams(): ShopParams {\n    return this.shopParams;\n  }\n\n  getProduct(id: number): Observable<IProduct> {\n    let product: IProduct;\n    this.productCache.forEach((products: IProduct[]) => {\n      product = products.find((p) => p.id === id);\n    });\n\n    if (product) {\n      return of(product);\n    }\n\n    return this.http.get<IProduct>(`${this.baseUrl}/products/${id}`);\n  }\n\n  getProductTypes(): Observable<IProductType[]> {\n    if (this.productTypes.length > 0) {\n      return of(this.productTypes);\n    }\n\n    return this.http.get<IProductType[]>(`${this.baseUrl}/products/types`).pipe(\n      map((response) => {\n        this.productTypes = response;\n        return response;\n      })\n    );\n  }\n}\n","<ng-container *ngIf=\"productTypes && products\">\n  <div class=\"uk-container uk-margin-large-top\">\n    <hr class=\"uk-divider-icon\" />\n\n    <div class=\"top-bar uk-margin-large-top\">\n      <div class=\"top-bar__left\">\n        <select (change)=\"onSortSelected($event)\" class=\"uk-select\">\n          <option\n            *ngFor=\"let sort of sortOptions\"\n            [value]=\"sort.value\"\n            [selected]=\"shopParams.sort === sort.value\"\n          >\n            {{ sort.name }}\n          </option>\n        </select>\n\n        <select (change)=\"onTypeSelected($event)\" class=\"uk-select\">\n          <option *ngFor=\"let type of productTypes\" [value]=\"type.id\">\n            {{ type.name }}\n          </option>\n        </select>\n      </div>\n\n      <div class=\"top-bar__right\">\n        <div class=\"uk-inline\">\n          <a class=\"uk-form-icon\" href=\"#\" uk-icon=\"icon: search\"></a>\n          <input\n            #search\n            (keyup.enter)=\"onSearch()\"\n            class=\"uk-input\"\n            type=\"text\"\n          />\n        </div>\n        <button (click)=\"onSearch()\" class=\"uk-button uk-button-default\">\n          Suchen\n        </button>\n        <button (click)=\"onReset()\" class=\"uk-button uk-button-default\">\n          Reset\n        </button>\n      </div>\n    </div>\n\n    <ul class=\"cards\">\n      <li *ngFor=\"let product of products\" class=\"card\">\n        <div class=\"uk-card uk-card-default\">\n          <a\n            routerLink=\"/shop/{{ product.id }}\"\n            class=\"uk-card-media-top img-overlay\"\n          >\n            <img [src]=\"product.imageUrl\" alt=\"\" class=\"card__image\" />\n            <div class=\"overlay\">\n              <span uk-icon=\"icon: search; ratio: 3;\"></span>\n            </div>\n          </a>\n          <div class=\"uk-card-body\">\n            <a routerLink=\"/shop/{{ product.id }}\">\n              <h3 class=\"uk-card-title\">{{ product.name }}</h3>\n            </a>\n            <div class=\"labels\">\n              <span class=\"uk-label card__label\">{{\n                product.productType\n              }}</span>\n              <span class=\"uk-label card__label\">{{ product.langAlpha2 }}</span>\n            </div>\n            <div class=\"card__last-row\">\n              <p>{{ product.price | currency }}</p>\n              <button\n                (click)=\"addItemToBasket(product)\"\n                class=\"uk-button uk-button-default\"\n              >\n                <span uk-icon=\"cart\"></span>\n                <span uk-icon=\"icon: plus; ratio: 0.6;\"></span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n</ng-container>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { IProduct } from '../shared/models/product';\nimport { ShopService } from './shop.service';\nimport { IProductType } from '../shared/models/productType';\nimport { ShopParams } from '../shared/models/shopParams';\nimport { BasketService } from '../basket/basket.service';\n\n@Component({\n  selector: 'app-shop',\n  templateUrl: './shop.component.html',\n  styleUrls: ['./shop.component.scss'],\n})\nexport class ShopComponent implements OnInit {\n  @ViewChild('search', { static: false }) searchString: ElementRef;\n  products: IProduct[];\n  productTypes: IProductType[];\n  shopParams: ShopParams;\n  totalCount: number;\n  sortOptions = [\n    { name: 'Alphabetical', value: 'name' },\n    { name: 'Price Asc', value: 'priceAsc' },\n    { name: 'Price Desc', value: 'priceDesc' },\n  ];\n\n  constructor(\n    private shopService: ShopService,\n    private basketService: BasketService\n  ) {\n    this.shopParams = this.shopService.getShopParams();\n  }\n\n  ngOnInit(): void {\n    this.getProducts(true);\n    this.getProductTypes();\n  }\n\n  addItemToBasket(product: IProduct): void {\n    this.basketService.addItemToBasket(product);\n  }\n\n  getProducts(useCache = false): void {\n    this.shopService.getProducts(useCache).subscribe(\n      (response) => {\n        this.products = response.data;\n        this.totalCount = response.count;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  getProductTypes(): void {\n    this.shopService.getProductTypes().subscribe(\n      (response) => {\n        this.productTypes = [{ id: 0, name: 'All books' }, ...response];\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onTypeSelected(event): void {\n    const params = this.shopService.getShopParams();\n    params.typeId = event.target.value;\n    params.pageIndex = 1;\n    this.shopService.setShopParams(params);\n    this.getProducts();\n  }\n\n  onSortSelected(event): void {\n    const params = this.shopService.getShopParams();\n    params.sort = event.target.value;\n    this.shopService.setShopParams(params);\n    this.getProducts();\n  }\n\n  onPageChanged(event): void {\n    const params = this.shopService.getShopParams();\n    if (params.pageIndex !== event) {\n      params.pageIndex = event;\n      this.shopService.setShopParams(params);\n      this.getProducts(true);\n    }\n  }\n\n  onSearch(): void {\n    const params = this.shopService.getShopParams();\n    params.search = this.searchString.nativeElement.value;\n    params.pageIndex = 1;\n    this.shopService.setShopParams(params);\n    this.getProducts();\n  }\n\n  onReset(): void {\n    this.searchString.nativeElement.value = '';\n    this.shopParams = new ShopParams();\n    this.shopService.setShopParams(this.shopParams);\n    this.getProducts();\n  }\n}\n","<ng-container *ngIf=\"product\">\n  <div class=\"product-grid uk-container uk-margin-top\">\n    <a (click)=\"openLightbox()\" class=\"product-grid__image img-overlay\">\n      <img [src]=\"product.imageUrl\" alt=\"\" />\n      <div class=\"overlay\">\n        <span uk-icon=\"icon: search; ratio: 3;\"></span>\n      </div>\n    </a>\n\n    <div class=\"product-grid__info\">\n      <h2>{{ product.name }}</h2>\n      <div class=\"labels\">\n        <span class=\"uk-label card__label\">{{ product.productType }}</span>\n        <span class=\"uk-label card__label\">{{ product.langAlpha2 }}</span>\n      </div>\n      <h4>{{ product.price | currency }}</h4>\n      <div class=\"cart-buttons\">\n        <div class=\"incrementer\">\n          <button\n            (click)=\"decrementQuantity()\"\n            class=\"uk-button uk-button-default uk-button-small\"\n          >\n            <span uk-icon=\"icon: minus; ratio: 0.5;\"></span>\n          </button>\n          <span class=\"number\">{{ quantity }}</span>\n          <button\n            (click)=\"incrementQuantity()\"\n            class=\"uk-button uk-button-default uk-button-small\"\n          >\n            <span uk-icon=\"icon: plus; ratio: 0.5;\"></span>\n          </button>\n        </div>\n        <button\n          (click)=\"addItemToBasket()\"\n          class=\"uk-button uk-button-default uk-button-small cart-buttons__add\"\n        >\n          <span uk-icon=\"cart\"></span>\n          <span uk-icon=\"icon: plus; ratio: 0.6;\"></span>\n        </button>\n      </div>\n      <div [innerHTML]=\"product.description\"></div>\n\n      <small>{{ staticContentUrl }}/static/images/products/1.png</small>\n\n      <div id=\"lightbox\" uk-lightbox=\"animation: slide\">\n        <a\n          data-caption=\"Caption 1\"\n          href=\"{{ staticContentUrl }}/static/images/products/1.png\"\n          >Vorschau</a\n        >\n        <a\n          data-caption=\"Caption 2\"\n          href=\"{{ staticContentUrl }}/static/images/products/2.png\"\n        ></a>\n        <a data-caption=\"Caption 3\" href=\"https://picsum.photos/500\"></a>\n      </div>\n    </div>\n  </div>\n</ng-container>\n\n<app-shop></app-shop>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ShopComponent } from './shop.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\n\nconst routes: Routes = [\n  { path: '', component: ShopComponent },\n  {\n    path: ':id',\n    component: ProductDetailsComponent,\n    data: { breadcrumb: { alias: 'productDetails' } },\n  },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ShopRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { IProduct } from '../../shared/models/product';\nimport { ShopService } from '../shop.service';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { BreadcrumbService } from 'xng-breadcrumb';\nimport { filter } from 'rxjs/operators';\n\nimport UIkit from 'uikit';\nimport { BasketService } from '../../basket/basket.service';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.scss'],\n})\nexport class ProductDetailsComponent implements OnInit {\n  staticContentUrl = environment.staticContentUrl;\n  product: IProduct;\n  quantity = 1;\n\n  constructor(\n    private shopService: ShopService,\n    private activatedRoute: ActivatedRoute,\n    private bcService: BreadcrumbService,\n    private basketService: BasketService,\n    private router: Router\n  ) {\n    this.bcService.set('@productDetails', '');\n\n    router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.getProduct();\n      });\n  }\n\n  ngOnInit(): void {}\n\n  addItemToBasket(): void {\n    this.basketService.addItemToBasket(this.product, this.quantity);\n  }\n\n  incrementQuantity(): void {\n    this.quantity++;\n  }\n\n  decrementQuantity(): void {\n    if (this.quantity > 1) {\n      this.quantity--;\n    }\n  }\n\n  getProduct(): void {\n    this.shopService\n      .getProduct(+this.activatedRoute.snapshot.paramMap.get('id'))\n      .subscribe(\n        (product) => {\n          this.product = product;\n          console.log(this.product.name);\n          this.bcService.set('@productDetails', product.name);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  openLightbox(): void {\n    UIkit.lightbox('#lightbox').show(0);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ShopComponent } from './shop.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { ShopRoutingModule } from './shop-routing.module';\n\n@NgModule({\n  declarations: [ShopComponent, ProductDetailsComponent],\n  imports: [CommonModule, SharedModule, ShopRoutingModule],\n})\nexport class ShopModule {}\n"],"sourceRoot":"webpack:///"}