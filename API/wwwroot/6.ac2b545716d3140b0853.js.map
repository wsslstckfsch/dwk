{"version":3,"sources":["./node_modules/rxjs/_esm2015/internal/scheduler/async.js","./node_modules/rxjs/_esm2015/internal/util/isNumeric.js","./node_modules/rxjs/_esm2015/internal/observable/timer.js","./src/app/account/login/login.component.html","./src/app/account/account-routing.module.ts","./src/app/account/login/login.component.ts","./src/app/account/register/register.component.ts","./src/app/account/register/register.component.html","./src/app/account/account.module.ts"],"names":["AsyncAction","isNumeric","val","isArray","parseFloat","dispatch","state","index","period","subscriber","next","closed","complete","this","schedule","routes","path","component","LoginComponent","accountService","router","fb","activatedRoute","returnUrl","snapshot","queryParams","createLoginForm","createRegisterForm","loginForm","group","email","required","pattern","password","registerForm","validateEmailNotTaken","login","value","subscribe","navigateByUrl","error","console","log","register","response","registerErrors","errors","control","dueTime","periodOrScheduler","scheduler","Number","isScheduler","Observable","due","now","timer","pipe","switchMap","checkEmailExists","map","res","emailExists","of","onLogin","onRegister","RegisterComponent","AccountRoutingModule","forChild","AccountModule"],"mappings":"8MAEO,MACM,EADiB,I,UAAI,GAAeA,EAAA,G,gBCD1C,SAASC,EAAUC,GACtB,OAAQ,OAAAC,EAAA,GAAQD,IAASA,EAAME,WAAWF,GAAO,GAAM,E,gBCsB3D,SAASG,EAASC,GACd,MAAM,MAAEC,EAAK,OAAEC,EAAM,WAAEC,GAAeH,EAEtC,GADAG,EAAWC,KAAKH,IACZE,EAAWE,OAAf,CAGK,IAAgB,IAAZH,EACL,OAAOC,EAAWG,WAEtBN,EAAMC,MAAQA,EAAQ,EACtBM,KAAKC,SAASR,EAAOE,I,qGCCjB,aAAyC,QAAW,Q,yBAAX,iB,yBAD3C,eACE,qBACF,Q,oBADwB,0CC9B9B,MAAMO,EAAiB,CACrB,CAAEC,KAAM,QAASC,UCWb,M,MAAOC,EAOX,YACUC,EACAC,EACAC,EACAC,GAHA,KAAAH,iBACA,KAAAC,SACA,KAAAC,KACA,KAAAC,iBAGV,WACET,KAAKU,UACHV,KAAKS,eAAeE,SAASC,YAAYF,WAAa,QACxDV,KAAKa,kBACLb,KAAKc,qBAGP,kBACEd,KAAKe,UAAYf,KAAKQ,GAAGQ,MAAM,CAC7BC,MAAO,CACL,KACA,CACE,IAAWC,SACX,IAAWC,QAAQ,2CAGvBC,SAAU,CAAC,KAAM,CAAC,IAAWF,aAIjC,qBACElB,KAAKqB,aAAerB,KAAKQ,GAAGQ,MAAM,CAChCC,MAAO,CACL,KACA,CACE,IAAWC,SACX,IAAWC,QAAQ,0CAErB,CAACnB,KAAKsB,0BAERF,SAAU,CAAC,KAAM,CAAC,IAAWF,aAIjC,UACElB,KAAKM,eAAeiB,MAAMvB,KAAKe,UAAUS,OAAOC,UAC9C,KACEzB,KAAKO,OAAOmB,cAAc1B,KAAKU,YAEhCiB,IACCC,QAAQC,IAAIF,KAKlB,aACE3B,KAAKM,eAAewB,SAAS9B,KAAKqB,aAAaG,OAAOC,UACnDM,IACC/B,KAAKO,OAAOmB,cAAc,UAE3BC,IACCC,QAAQC,IAAIF,GACZ3B,KAAKgC,eAAiBL,EAAMM,SAKlC,wBACE,OAAQC,GHrFL,SAAeC,EAAU,EAAGC,EAAmBC,GAClD,IAAI1C,GAAU,EAUd,OATIP,EAAUgD,GACVzC,EAAS2C,OAAOF,GAAqB,EAAK,EAAKE,OAAOF,GAEjD,OAAAG,EAAA,GAAYH,KACjBC,EAAYD,GAEX,OAAAG,EAAA,GAAYF,KACbA,EAAY,GAET,IAAIG,EAAA,EAAW5C,IAClB,MAAM6C,EAAMrD,EAAU+C,GAChBA,GACEA,EAAUE,EAAUK,MAC5B,OAAOL,EAAUpC,SAAST,EAAUiD,EAAK,CACrC/C,MAAO,EAAGC,SAAQC,iBGsEjB+C,CAAM,KAAKC,KAChB,OAAAC,EAAA,GAAU,IACHX,EAAQV,MAGNxB,KAAKM,eAAewC,iBAAiBZ,EAAQV,OAAOoB,KACzD,OAAAG,EAAA,GAAKC,GACIA,EAAM,CAAEC,aAAa,GAAS,OAJhC,OAAAC,EAAA,GAAG,S,6CA5ET7C,GAAc,0C,uBAAdA,EAAc,2XFjB3B,QACE,gBACE,cACE,aAAI,gBAAK,OAET,iBACE,kCAAY,EAAA8C,YAIZ,2BAIA,2BAMA,gBACE,mBAIE,mBACF,OACF,OACF,OACF,OAEA,eACE,cAAI,oBAAQ,OAEZ,sBAIA,kBACE,kCAAY,EAAAC,eAIZ,4BAIA,4BAMA,iBACE,oBAIE,mBACF,OACF,OACF,OACF,OACF,OACF,Q,MAzDQ,sCAIE,sCAIA,iCAAoB,mBAOlB,6CAYD,sCAMH,yCAIE,sCAIA,iCAAoB,mBAOlB,kD,8DEtCN,IDVJ,CAAEjD,KAAM,WAAYC,UEAhB,M,MAAOiD,EACX,eAEA,a,6CAHWA,I,uBAAAA,EAAiB,yECP9B,YAAG,0BAAe,S,iBDOZ,KFQC,IAAD,Q,MAAOC,G,8BAAAA,I,oDAAAA,IAAoB,SAHtB,CAAC,IAAaC,SAASrD,IACtB,O,GAEN,G,gBIJC,IAAD,Q,MAAOsD,G,8BAAAA,I,oDAAAA,IAAa,SAFf,CAAC,IAAc,EAAsB,Q,GAE1C","file":"6.ac2b545716d3140b0853.js","sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n//# sourceMappingURL=async.js.map","import { isArray } from './isArray';\nexport function isNumeric(val) {\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n//# sourceMappingURL=isNumeric.js.map","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime = 0, periodOrScheduler, scheduler) {\n    let period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        const due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period, subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    const { index, period, subscriber } = state;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map","<ng-container>\n  <div class=\"uk-container uk-margin-top\">\n    <div>\n      <h2>Login</h2>\n\n      <form\n        (ngSubmit)=\"onLogin()\"\n        [formGroup]=\"loginForm\"\n        class=\"uk-form-stacked\"\n      >\n        <app-text-input\n          [label]=\"'Email address'\"\n          formControlName=\"email\"\n        ></app-text-input>\n        <app-text-input\n          [label]=\"'Password'\"\n          [type]=\"'password'\"\n          formControlName=\"password\"\n        ></app-text-input>\n\n        <div class=\"uk-margin\">\n          <button\n            [disabled]=\"loginForm.invalid\"\n            class=\"uk-button uk-button-primary\"\n          >\n            Login\n          </button>\n        </div>\n      </form>\n    </div>\n\n    <div>\n      <h2>Register</h2>\n\n      <ul *ngIf=\"registerErrors\" class=\"uk-list\">\n        <li *ngFor=\"let error of registerErrors\">{{ error }}</li>\n      </ul>\n\n      <form\n        (ngSubmit)=\"onRegister()\"\n        [formGroup]=\"registerForm\"\n        class=\"uk-form-stacked\"\n      >\n        <app-text-input\n          [label]=\"'Email address'\"\n          formControlName=\"email\"\n        ></app-text-input>\n        <app-text-input\n          [label]=\"'Password'\"\n          [type]=\"'password'\"\n          formControlName=\"password\"\n        ></app-text-input>\n\n        <div class=\"uk-margin\">\n          <button\n            [disabled]=\"registerForm.invalid\"\n            class=\"uk-button uk-button-primary\"\n          >\n            Login\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  AsyncValidatorFn,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { AccountService } from '../account.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { of, timer } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  registerForm: FormGroup;\n  returnUrl: string;\n\n  registerErrors: string[];\n\n  constructor(\n    private accountService: AccountService,\n    private router: Router,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.returnUrl =\n      this.activatedRoute.snapshot.queryParams.returnUrl || '/shop';\n    this.createLoginForm();\n    this.createRegisterForm();\n  }\n\n  createLoginForm(): void {\n    this.loginForm = this.fb.group({\n      email: [\n        null,\n        [\n          Validators.required,\n          Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$'),\n        ],\n      ],\n      password: [null, [Validators.required]],\n    });\n  }\n\n  createRegisterForm(): void {\n    this.registerForm = this.fb.group({\n      email: [\n        null,\n        [\n          Validators.required,\n          Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$'),\n        ],\n        [this.validateEmailNotTaken()],\n      ],\n      password: [null, [Validators.required]],\n    });\n  }\n\n  onLogin(): void {\n    this.accountService.login(this.loginForm.value).subscribe(\n      () => {\n        this.router.navigateByUrl(this.returnUrl);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onRegister(): void {\n    this.accountService.register(this.registerForm.value).subscribe(\n      (response) => {\n        this.router.navigateByUrl('/shop');\n      },\n      (error) => {\n        console.log(error);\n        this.registerErrors = error.errors;\n      }\n    );\n  }\n\n  validateEmailNotTaken(): AsyncValidatorFn {\n    return (control) => {\n      return timer(500).pipe(\n        switchMap(() => {\n          if (!control.value) {\n            return of(null);\n          }\n          return this.accountService.checkEmailExists(control.value).pipe(\n            map((res) => {\n              return res ? { emailExists: true } : null;\n            })\n          );\n        })\n      );\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p>register works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [CommonModule, AccountRoutingModule, SharedModule],\n})\nexport class AccountModule {}\n"],"sourceRoot":"webpack:///"}