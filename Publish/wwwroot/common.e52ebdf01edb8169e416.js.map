{"version":3,"sources":["./src/app/shared/components/basket-summary/basket-summary.component.ts","./src/app/shared/components/basket-summary/basket-summary.component.html","./src/app/shared/components/order-totals/order-totals.component.ts","./src/app/shared/components/order-totals/order-totals.component.html","./src/app/shared/components/text-input/text-input.component.html","./src/app/shared/components/text-input/text-input.component.ts"],"names":["BasketSummaryComponent","decrement","increment","remove","isBasket","items","isOrder","item","this","emit","OrderTotalsComponent","TextInputComponent","controlDir","type","valueAccessor","control","asyncValidators","asyncValidator","setValidators","validator","setAsyncValidators","updateValueAndValidity","event","change","target","value","obj","input","nativeElement","fn","onTouched","onChange"],"mappings":"2FAAA,4D,sBCMQ,aAAsB,mBAAQ,Q,qBAE9B,a,yBAgBA,aAAsB,QAAmB,Q,8BAAnB,0B,uCAEtB,aACE,gBACE,gBACE,mBACE,mGAGA,iBACF,OACA,kBAAqB,QAAmB,OACxC,mBACE,mGAGA,kBACF,OACF,OACA,mBACE,8FAGA,mBACF,OACF,OACF,O,iCAf2B,0B,yBAvB7B,aACE,aACE,gBACE,gBACA,cAGG,eAAM,QAAsB,OAAO,OAExC,OACF,OACA,aAAI,Q,mBAA2B,OAC/B,sBACA,cAAI,S,oBAA2C,OAC/C,uBAyBF,Q,mCApCW,oCAEH,uDAEO,4BAIT,gCACC,iCACD,4CACC,iC,yBA1Bb,QACE,kBACE,gBACE,aACE,aAAI,kBAAO,OACX,aAAI,gBAAK,OACT,qBACA,aAAI,iBAAK,OACT,sBACF,OACF,OACA,iBACE,wBAwCF,OACF,OACF,Q,oBAhDa,iCAEA,gCAIc,iCDDpB,IAAD,Q,MAAOA,EAUX,cARA,KAAAC,UAAuC,IAAI,IAE3C,KAAAC,UAAuC,IAAI,IACjC,KAAAC,OAAoC,IAAI,IACzC,KAAAC,UAAW,EACX,KAAAC,MAAsC,GACtC,KAAAC,SAAU,EAInB,YAEA,iBAAiBC,GACfC,KAAKL,OAAOM,KAAKF,GAGnB,sBAAsBA,GACpBC,KAAKN,UAAUO,KAAKF,GAGtB,sBAAsBA,GACpBC,KAAKP,UAAUQ,KAAKF,I,6CAvBXP,I,uBAAAA,EAAsB,oiBCXnC,gC,KAAe,wC,kDDWT,I,8FEDC,IAAD,Q,MAAOU,EAKX,eAEA,a,6CAPWA,I,uBAAAA,EAAoB,kMCVjC,QACE,aAAI,wBAAa,OACjB,YAAG,aAAI,6DAAkD,OAAK,OAC9D,kBACE,gBACE,aACE,aAAI,oBAAQ,OACZ,cACE,kBAAQ,S,oBAAyB,OACnC,OACF,OACA,cACE,cAAI,oBAAQ,OACZ,cACE,kBAAQ,S,oBAA+B,OACzC,OACF,OACA,cACA,cACE,cAAI,iBAAK,OACT,cACE,kBAAQ,S,oBAAsB,OAChC,OACF,OACF,OACF,OACF,Q,MAlBkB,qCAMA,gDAOA,mC,6BDXZ,I,kJEeF,QAOE,gBACF,Q,yBAWA,gBACG,QAAuB,Q,qBAAvB,yC,yBAEH,gBACG,QAAmB,Q,qBAAnB,qC,yBAZL,QAQE,wBAGA,wBAGF,Q,oBANU,iGAGA,iG,sBAaR,gBACG,+BAAoB,Q,yBATzB,QAQE,wBAGF,Q,oBAHU,qGC7CL,IAAD,Q,MAAOC,EAKX,YAA2BC,GAAA,KAAAA,aAHlB,KAAAC,KAAO,OAIdL,KAAKI,WAAWE,cAAgBN,KAGlC,WACE,MAAMO,EAAUP,KAAKI,WAAWG,QAE1BC,EAAkBD,EAAQE,eAC5B,CAACF,EAAQE,gBACT,GAEJF,EAAQG,cALWH,EAAQI,UAAY,CAACJ,EAAQI,WAAa,IAM7DJ,EAAQK,mBAAmBJ,GAC3BD,EAAQM,yBAGV,SAASC,GACPd,KAAKe,OAAOD,EAAME,OAAOC,OAG3B,OAAOA,IAEP,aAEA,WAAWC,GACTlB,KAAKmB,MAAMC,cAAcH,MAAQC,GAAO,GAG1C,iBAAiBG,GACfrB,KAAKe,OAASM,EAGhB,kBAAkBA,GAChBrB,KAAKsB,UAAYD,G,6CAtCRlB,GAAkB,c,uBAAlBA,EAAkB,uD,GAAA,K,2TDf/B,gBACE,kBAA6B,QAAW,OACxC,gBAQE,oBAEE,8BAAQ,EAAAmB,aAAR,CAAoB,2BACX,EAAAC,SAAA,KAHX,OAeA,+BASF,OAEA,+BAgBA,+BAYF,Q,MA/D+B,sBAE3B,8GAWE,6HAMA,mBAAY,sBAAZ,CAAY,eAMX,iGAWF,mHAgBA,mH,kCCtCC","file":"common.e52ebdf01edb8169e416.js","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { BasketService } from '../../../basket/basket.service';\nimport { Observable } from 'rxjs';\nimport { IBasket, IBasketItem } from '../../models/basket';\nimport { IOrderItem } from '../../models/order';\n\n@Component({\n  selector: 'app-basket-summary',\n  templateUrl: './basket-summary.component.html',\n  styleUrls: ['./basket-summary.component.scss'],\n})\nexport class BasketSummaryComponent implements OnInit {\n  @Output()\n  decrement: EventEmitter<IBasketItem> = new EventEmitter<IBasketItem>();\n  @Output()\n  increment: EventEmitter<IBasketItem> = new EventEmitter<IBasketItem>();\n  @Output() remove: EventEmitter<IBasketItem> = new EventEmitter<IBasketItem>();\n  @Input() isBasket = true;\n  @Input() items: IBasketItem[] | IOrderItem[] = [];\n  @Input() isOrder = false;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  removeBasketItem(item: IBasketItem): void {\n    this.remove.emit(item);\n  }\n\n  incrementItemQuantity(item: IBasketItem): void {\n    this.increment.emit(item);\n  }\n\n  decrementItemQuantity(item: IBasketItem): void {\n    this.decrement.emit(item);\n  }\n}\n","<ng-container *ngIf=\"items && items.length > 0\">\n  <table class=\"uk-table\">\n    <thead>\n      <tr>\n        <th>Product</th>\n        <th>Price</th>\n        <th *ngIf=\"!isBasket\">Quantity</th>\n        <th>Total</th>\n        <th *ngIf=\"isBasket\"></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let item of items\">\n        <td>\n          <div class=\"img-name\">\n            <img [src]=\"item.imageUrl\" alt=\"\" />\n            <a\n              [href]=\"'/shop/' + (item.id || item.productId)\"\n              class=\"uk-text-nowrap\"\n              ><span>{{ item.productName }}</span></a\n            >\n          </div>\n        </td>\n        <td>{{ item.price | currency }}</td>\n        <td *ngIf=\"!isBasket\">{{ item.quantity }}</td>\n        <td>{{ item.price * item.quantity | currency }}</td>\n        <td *ngIf=\"isBasket\">\n          <div class=\"button-group\">\n            <div class=\"incrementer\">\n              <button\n                (click)=\"decrementItemQuantity(item)\"\n                class=\"uk-button uk-button-default uk-button-small\"\n              >\n                <span uk-icon=\"icon: minus; ratio: 0.5;\"></span>\n              </button>\n              <span class=\"number\">{{ item.quantity }}</span>\n              <button\n                (click)=\"incrementItemQuantity(item)\"\n                class=\"uk-button uk-button-default uk-button-small\"\n              >\n                <span uk-icon=\"icon: plus; ratio: 0.5;\"></span>\n              </button>\n            </div>\n            <button\n              (click)=\"removeBasketItem(item)\"\n              class=\"uk-button uk-button-default uk-button-small\"\n            >\n              <span uk-icon=\"icon: close;\"></span>\n            </button>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IBasketTotals } from '../../models/basket';\nimport { BasketService } from '../../../basket/basket.service';\n\n@Component({\n  selector: 'app-order-totals',\n  templateUrl: './order-totals.component.html',\n  styleUrls: ['./order-totals.component.scss'],\n})\nexport class OrderTotalsComponent implements OnInit {\n  @Input() shippingPrice: number;\n  @Input() subtotal: number;\n  @Input() total: number;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<ng-container>\n  <h3>Order summary</h3>\n  <p><em>Shipping costs will be added later during checkout</em></p>\n  <table class=\"uk-table uk-table-divider\">\n    <tbody>\n      <tr>\n        <td>Subtotal</td>\n        <td>\n          <strong>{{ subtotal | currency }}</strong>\n        </td>\n      </tr>\n      <tr>\n        <td>Shipping</td>\n        <td>\n          <strong>{{ shippingPrice | currency }} </strong>\n        </td>\n      </tr>\n      <tr></tr>\n      <tr>\n        <td>Total</td>\n        <td>\n          <strong>{{ total | currency }}</strong>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n","<div class=\"uk-margin\">\n  <label class=\"uk-form-label\">{{ label }}</label>\n  <div\n    [class.spinner-container]=\"\n      controlDir &&\n      controlDir.control &&\n      controlDir.control.status === 'PENDING'\n    \"\n    class=\"uk-form-controls\"\n  >\n    <input\n      #input\n      (blur)=\"onTouched()\"\n      (input)=\"onChange($event)\"\n      [class.uk-form-danger]=\"\n        controlDir &&\n        controlDir.control &&\n        !controlDir.control.valid &&\n        controlDir.control.touched\n      \"\n      [id]=\"label\"\n      [placeholder]=\"label\"\n      [type]=\"type\"\n      class=\"uk-input\"\n    />\n    <ng-container\n      *ngIf=\"\n        controlDir &&\n        controlDir.control &&\n        controlDir.control.status === 'PENDING'\n      \"\n    >\n      <div uk-spinner=\"ratio: 0.7\"></div>\n    </ng-container>\n  </div>\n\n  <ng-container\n    *ngIf=\"\n      controlDir &&\n      controlDir.control &&\n      !controlDir.control.valid &&\n      controlDir.control.touched\n    \"\n  >\n    <small *ngIf=\"controlDir.control.errors?.required\"\n      >{{ label }} is required</small\n    >\n    <small *ngIf=\"controlDir.control.errors?.pattern\"\n      >Invalid {{ label }}</small\n    >\n  </ng-container>\n\n  <ng-container\n    *ngIf=\"\n      controlDir &&\n      controlDir.control &&\n      !controlDir.control.valid &&\n      controlDir.control.dirty\n    \"\n  >\n    <small *ngIf=\"controlDir.control.errors?.emailExists\"\n      >Email already in use</small\n    >\n  </ng-container>\n</div>\n","import {\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  Self,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss'],\n})\nexport class TextInputComponent implements OnInit, ControlValueAccessor {\n  @ViewChild('input', { static: true }) input: ElementRef;\n  @Input() type = 'text';\n  @Input() label: string;\n\n  constructor(@Self() public controlDir: NgControl) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit(): void {\n    const control = this.controlDir.control;\n    const validators = control.validator ? [control.validator] : [];\n    const asyncValidators = control.asyncValidator\n      ? [control.asyncValidator]\n      : [];\n\n    control.setValidators(validators);\n    control.setAsyncValidators(asyncValidators);\n    control.updateValueAndValidity();\n  }\n\n  onChange(event): void {\n    this.change(event.target.value);\n  }\n\n  change(value): void {}\n\n  onTouched(): void {}\n\n  writeValue(obj: any): void {\n    this.input.nativeElement.value = obj || '';\n  }\n\n  registerOnChange(fn: any): void {\n    this.change = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n}\n"],"sourceRoot":"webpack:///"}